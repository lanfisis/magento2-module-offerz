<?php

namespace Burdz\Offerz\Resource\Offer;

use Magento\Framework\Model\ResourceModel\Db\Collection\AbstractCollection;
use Burdz\Offerz\Model\Offer as OfferModel;
use Burdz\Offerz\Resource\Offer as OfferResource;
use Burdz\Offerz\Api\Data\OfferInterface;

/**
 * @category  Burdz
 * @package   Burdz\Offerz
 * @author    David Buros <david.buros@gmail.com>
 * @licence   The Unlicense
 */
class Collection extends AbstractCollection
{
    /**
     * @var bool
     */
    protected $hasCategoryLink = false;

    /**
    * @return void
    */
    protected function _construct()
    {
        $this->_init(OfferModel::class, OfferResource::class);
    }

    /**
     * @param bool|null $value
     * @return bool
     */
    public function hasCategoryLink(?bool $value = null): bool
    {
        if ($value !== null) {
            $this->hasCategoryLink = $value;
        }
        return $this->hasCategoryLink;
    }

    /**
     * @return void
     */
    protected function _renderFiltersBefore()
    {
        if ($this->hasCategoryLink()) {
            $this->getSelect()->join(
                ['link' => $this->getTable(OfferInterface::TABLE_LINK_NAME)],
                'main_table.' . OfferInterface::FIELD_OFFER_ID . ' = link.' . OfferInterface::FIELD_OFFER_ID,
                ['category_id' => 'link.category_id']
            )->group('main_table.' . OfferInterface::FIELD_OFFER_ID);
        }
    }

    /**
     * Redeclare before load method for adding event
     *
     * @return $this
     */
    protected function _beforeLoad()
    {
        return parent::_beforeLoad(); // TODO: Change the autogenerated stub
    }


}
